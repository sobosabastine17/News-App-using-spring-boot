Entities
1. Post
Represents a news article or story.

Attributes:

id: Unique identifier for the post.
title: Title of the post.
content: Content or body of the post.
author: Author of the post.
category: Category the post belongs to.
subcategory: Subcategory the post belongs to.
createdAt: Timestamp for post creation.
updatedAt: Timestamp for last update.

2. Comment
Represents comments made on news posts.

Attributes:

id: Unique identifier for the comment.
content: Content of the comment.
user: User who posted the comment.
post: Post the comment is associated with.
createdAt: Timestamp for comment creation.

3. Category
Represents categories for organizing posts.

Attributes:

id: Unique identifier for the category.
name: Name of the category.

4. Subcategory
Represents subcategories within categories.

Attributes:

id: Unique identifier for the subcategory.
name: Name of the subcategory.
category: Parent category of the subcategory.

5. User
Represents users of the system.

Attributes:

id: Unique identifier for the user.
username: User's username.
email: User's email address.
password: User's password (hashed/salted).
createdAt: Timestamp for user registration.
6. Announcement
Represents announcements or news updates.

Attributes:

id: Unique identifier for the announcement.
title: Title of the announcement.
content: Content of the announcement.
createdAt: Timestamp for announcement creation.

//////////////////////////
***** API Endpoints ******
//////////////////////////

BASE URL: localhost:8080/api/newsApp/v1
Default values
- Suspended=0
- Active=1
- Pending=2
- Review=3
- Approved=4
- Rejected=5
- Delete=6

##### Posts #####

GET /posts: Get all posts.
GET /posts/{id}: Get a specific post by ID(pending=2,review=3,approved=4,rejected=5,delete=6).
POST /posts: Create a new post.
PATCH /posts/{id}: Update an existing post.
PATCH /posts/restore/{id}: Restore a post by changing the status(1).
SOFT DELETE /posts/{id}: Delete a post by changing the ID to 6.
HARD DELETE /posts/delete/{id}: Delete a post permanently from the database.

Comments
POST /comment/save: Create a new comment.
GET /comment/allComment: Get all comments.
GET /comment/post/{id}: Get a specific comment by Post ID.
DELETE /comments/{id}: Delete a comment by updating the status to 6.
UPDATE /comment/update/{id}: Update a comment.
STATUS /comment/status/{id}: Change the status of a comment to 1 or 0.

Users
Roles=(USER,ADMIN,CREATOR,EDITOR,SUB_ADMIN)
GET /users: Get all users.
GET /users/{id}: Get a specific user by ID.
POST /users: Register a new user.
PUT /users/{id}: Update an existing user.
DELETE /users/{id}: Delete a user.

Categories
GET /categories: Get all categories.
GET /categories/{id}: Get a specific category by ID.
POST /categories: Create a new category.
PUT /categories/{id}: Update an existing category.
DELETE /categories/{id}: Delete a category.

Subcategories
GET /categories/{categoryId}/subcategories: Get all subcategories for a specific category.
GET /subcategories/{id}: Get a specific subcategory by ID.
POST /categories/{categoryId}/subcategories: Create a new subcategory.
PUT /subcategories/{id}: Update an existing subcategory.
DELETE /subcategories/{id}: Delete a subcategory.


Announcements
GET /announcement/getAll: Get all announcements.
GET //announcement/getById/{id}: Get a specific announcement by ID.
GET /announcement/getAllByStatus/{status}: Get announcement By Status(Active=1,deleted=0).
POST /announcement/add: Create a new announcement(1).
PATCH /announcement/update/{id}: Update an existing announcement.
PATCH /announcement/restore/{id}: Restore an announcement by changing the status(1).
DELETE(SOFT) /announcement/delete/soft/{id}: Delete an announcement by changing the status(0).
DELETE(HARD) /announcement/delete/hard/{id}: Delete an announcement permanently from the database.


Authentication and Authorization
Explain any authentication/authorization mechanisms used to secure the API endpoints.

Usage Examples
Provide examples of API requests and responses for each endpoint.